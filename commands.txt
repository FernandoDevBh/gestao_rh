python -m venv <nome_ambiente>
pip install djangorestframework
django-admin startproject <project_name> .
python manage.py createsuperuser
(python manage.py createsuperuser --username admin --email fernando.sferreira@example.com)
python manage.py startapp <app_name>
cd venv\scripts python -m pip install <package>

alias python='winpty python.exe'

máquina linux:
sudo apt-get update && sudo apt-get upgrade

uWSGI
pip install wheel
apt-get install build-essential python-dev
sudo apt-get install python3.6-dev

nginx
Instalação:
sudo apt-get install nginx
ativar a virtualenv
cd <diretorio projeto>
vim uwsgi_params
set paste install

uwsgi_param  QUERY_STRING       $query_string;
uwsgi_param  REQUEST_METHOD     $request_method;
uwsgi_param  CONTENT_TYPE       $content_type;
uwsgi_param  CONTENT_LENGTH     $content_length;

uwsgi_param  REQUEST_URI        $request_uri;
uwsgi_param  PATH_INFO          $document_uri;
uwsgi_param  DOCUMENT_ROOT      $document_root;
uwsgi_param  SERVER_PROTOCOL    $server_protocol;
uwsgi_param  REQUEST_SCHEME     $scheme;
uwsgi_param  HTTPS              $https if_not_empty;

uwsgi_param  REMOTE_ADDR        $remote_addr;
uwsgi_param  REMOTE_PORT        $remote_port;
uwsgi_param  SERVER_PORT        $server_port;
uwsgi_param  SERVER_NAME        $server_name;

navegar para cd /etc/nginx/sites-available/
sudo vim gestao_rh.conf

# mysite_nginx.conf

# the upstream component nginx needs to connect to
upstream django {
    # server unix:///path/to/your/mysite/mysite.sock; # for a file socket
    server 127.0.0.1:8001; # for a web port socket (we'll use this first)
}

# configuration of the server
server {
    # the port your site will be served on
    listen      8000;
    # the domain name it will serve for
    server_name 3.134.92.135; # substitute your machine's IP address or FQDN
    charset     utf-8;

    # max upload size
    client_max_body_size 75M;   # adjust to taste

    # Django media
    location /media  {
        alias /home/ubuntu/gestao_rh/media;  # your Django project's media files - amend as required
    }

    location /static {
        alias /home/ubuntu/gestao_rh/static; # your Django project's static files - amend as required
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  django;
        include     /home/ubuntu/gestao_rh/uwsgi_params; # the uwsgi_params file you installed
    }
}

sudo /etc/init.d/nginx restart

uwsgi --socket gestao_rh/mysite.sock --wsgi-file teste.py --chmod=666

uwsgi --socket mysite.sock --module mysite.wsgi --chmod-socket=666

cd <back to home>
pwd <pegar o caminho>
/home/ubuntu/gestao_rh 

python manage.py collectstatic


-- ir para raiz
vim uwsgi.sh
conteudo
#!/bin/bash
/home/ubunto/venv/bin/uwsgi --emperor /etc/uwsgi/vassals --uid www-data --gid www-data

 sudo chmod 744 uwsgi.sh

systemctl
 -- ir para 
 /etc/systemd/system/
 -- criar o arquivo
vim gestao_rh.service
[Unit]
Description=My Miscellaneous Service
After=network.target

[Service]
ExecStart=/home/ubuntu/uwsgi.sh
Type=forking
User=ubuntu
[Install]
WantedBy=default.target

sudo chmod 644 /etc/systemd/system/gestao_rh.service

-- Reload nos arquvivos
systemctl daemon-reload

--redefinir senha
sudo passwd ubuntu

--habilita o serviço
systemctl enable gestao_rh.service

-- Inicia Serviço
systemctl start gestao_rh.service